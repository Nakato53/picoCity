pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- GameCodeurJamGestion
-- by Nakato
-- ./main.lua
currentScreen = nil

function _init()
currentScreen = GameScreenNew()
end

function _update()
currentScreen.update()
end

function _draw()
cls(13)
currentScreen.draw()
end



































































































































































-- ./managers/gamemanager.lua
function GameManagerNew()
gamestate = {}
end
-- ./utils/fade.lua
function fade_scr(fa)
fa=max(min(1,fa),0)
local fn=8
local pn=15
local fc=1/fn
local fi=flr(fa/fc)+1
local fades={
{1,1,1,1,0,0,0,0},
{2,2,2,1,1,0,0,0},
{3,3,4,5,2,1,1,0},
{4,4,2,2,1,1,1,0},
{5,5,2,2,1,1,1,0},
{6,6,13,5,2,1,1,0},
{7,7,6,13,5,2,1,0},
{8,8,9,4,5,2,1,0},
{9,9,4,5,2,1,1,0},
{10,15,9,4,5,2,1,0},
{11,11,3,4,5,2,1,0},
{12,12,13,5,5,2,1,0},
{13,13,5,5,2,1,1,0},
{14,9,9,4,5,2,1,0},
{15,14,9,4,5,2,1,0}
}

for n=1,pn do
pal(n,fades[n][fi],0)
end
end
-- ./utils/perlin.lua
-- Simplex Noise Example
-- by Anthony DiGirolamo

local Perms = {
151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225,
140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148,
247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32,
57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175,
74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122,
60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54,
65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169,
200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64,
52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212,
207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213,
119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,
129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104,
218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241,
81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157,
184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93,
222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180
}

-- make Perms 0 indexed
for i = 0, 255 do
Perms[i]=Perms[i+1]
end
-- Perms[256]=nil

-- The above, mod 12 for each element --
local Perms12 = {}

for i = 0, 255 do
local x = Perms[i] % 12
Perms[i+256], Perms12[i], Perms12[i+256] = Perms[i], x, x
end

-- Gradients for 2D, 3D case --
local Grads3 = {
{ 1, 1, 0 }, { -1, 1, 0 }, { 1, -1, 0 }, { -1, -1, 0 },
{ 1, 0, 1 }, { -1, 0, 1 }, { 1, 0, -1 }, { -1, 0, -1 },
{ 0, 1, 1 }, { 0, -1, 1 }, { 0, 1, -1 }, { 0, -1, -1 }
}

for row in all(Grads3) do
for i=0,2 do
row[i]=row[i+1]
end
-- row[3]=nil
end

for i=0,11 do
Grads3[i]=Grads3[i+1]
end

function GetN2d (bx, by, x, y)
local t = .5-x*x-y*y
local index = Perms12[bx+Perms[by]]
return max(0, (t*t)*(t*t))*(Grads3[index][0]*x+Grads3[index][1]*y)
end

---
-- @param x
-- @param y
-- @return Noise value in the range [-1, +1]
function Simplex2D (x, y)
local s = (x+y)*0.366025403 -- F
local ix, iy = flr(x+s), flr(y+s)
local t = (ix+iy)*0.211324865 -- G
local x0 = x+t-ix
local y0 = y+t-iy
ix, iy = band(ix, 255), band(iy, 255)
local n0 = GetN2d(ix, iy, x0, y0)
local n2 = GetN2d(ix+1, iy+1, x0-0.577350270, y0-0.577350270) -- G2
local xi = 0
if x0 >= y0 then xi = 1 end
local n1 = GetN2d(ix+xi, iy+(1-xi), x0+0.211324865-xi, y0-0.788675135+xi) -- x0+G-xi, y0+G-(1-xi)
return 70*(n0+n1+n2)
end

terrainmap_colors = {11, 11, 11, 9, 9, 9, 7, 7, -- deep ocean
7, 5, 5, -- coastline
5, 3, 3, 3, 3, -- green land
3, 3, 3, 3} -- mountains

carte = {}
function init_perlin(seed)
srand(seed)
local noisedx = rnd(1024)
local noisedy = rnd(1024)

carte = {}
carte.tiles = {}

for y=0,100 do
local ligne = {}
for x=0,100 do
local octaves = 5
local freq = .007
local max_amp = 0
local amp = 1
local value = 0
local persistance = .65
for n=1,octaves do

value = value+Simplex2D(noisedx+freq*x,
noisedy+freq*y)
max_amp += amp
amp *= persistance
freq *= 2
end
value /= max_amp
if value>1 then value = 1 end
if value<-1 then value = -1 end
value += 1
value *= #terrainmap_colors/2
value = flr(value+.5)
value = terrainmap_colors[value]
if value == 3 then
if rnd(10)<1 then
value = 33
end
end
add(ligne,{sprite=value})
end
add(carte.tiles,ligne)
end
end

-- ./utils/WorldConverter.lua
TILE_SIZE = {x=8, y=8}
function WorldConverterToIso(x,y)
isoX =x-y
isoY =(x+y)/2
return {x=isoX*TILE_SIZE.x, y=isoY*TILE_SIZE.y}
end
function WorldConverterToCell(x,y)
cellX = (2*y+x)/2
cellY= (2*y-x)/2
return {x=cellX/TILE_SIZE.x, y=cellY/TILE_SIZE.y}
end

-- ./screens/gamescreen.lua
function GameScreenNew()
t = 0
cameraNew()
tileMapNew()
cursorInit()
currentState = "move"
city = {
ressources = {
food = 100,
wood = 40,
water = 50
},
population = 10

}
cameraCenterOn(cursor.x,cursor.y)

day = {
current = 450,
max = 900,
step = 2
}

return {
update = GameScreenUpdate,
draw = GameScreenDraw
}
end

function GameScreenUpdate()

t+=1

day.current += day.step
if day.current > day.max*1.5 or day.current < 250 then
day.step *=-1
end


if(currentState == "build") then

if btnp(5,0) and (cursor.canConstruct or buildBar.position==1) then
GameScreenBuildSelection()
end

if btnp(4,0) then
currentState = "move"
cursor.size = 1
end

if btnp(0,0) then
buildBar.position-=1
if buildBar.position < 1 then
buildBar.position = #buildBar.tiles
end
GameScreenSelectBuildTool()
end
if btnp(1,0) then
buildBar.position+=1
if buildBar.position > #buildBar.tiles then
buildBar.position = 1
end
GameScreenSelectBuildTool()
end
else
if(currentState == "move") then
if btnp(0,0) then cursorMoveOf(-1,0) end
if btnp(1,0) then cursorMoveOf(1,0) end
if btnp(2,0) then cursorMoveOf(0,-1) end
if btnp(3,0) then cursorMoveOf(0,1) end

if btnp(5,0) and (carte.tiles[cursor.y][cursor.x].sprite == 9 or carte.tiles[cursor.y][cursor.x].sprite == 11) == false then
currentState = "build"
GameScreenSelectBuildTool()
end
end
end


cursorUpdate()

end

function GameScreenDraw()
cameraToWorld()
cursorDraw()

print(1-(max(day.current, 350) / day.max), cam.x + 5, cam.y + 30, 7)

fade_scr(
1-(max(day.current, 350) / day.max)
)

tileMapDraw()

--on build mode
if(currentState == "build" and (cursor.canConstruct or buildBar.position==1)) then

local infos = buildBar.tiles[buildBar.position]
--si immeuble
if infos.size == 2 then
local iso = WorldConverterToIso(cursor.x,cursor.y+1)
if t%5 != 0 then
spr(infos.tile,iso.x,iso.y-12,4,4)
end
else
-- si monocase
local iso = WorldConverterToIso(cursor.x,cursor.y)
if t%5 != 0 then
spr(infos.tile,iso.x,iso.y,2,2)
end
end
end

cursorDrawArrow()

cameraToUI()
UIDraw()
end



buildBar = {}
buildBar.position = 1
buildBar.tiles = {
{
sprite = 224,
tile = 224,
costs = {
food = 2,
wood = 0,
water = 2
},
size = 1,
name = "detruire",
desc = "permet de raser un ",
descnext = "element de la carte"
},
{
sprite = 35,
tile = 35,
costs = {
food = 4,
wood = 15,
water = 5
},
size = 1,
name = "petite maison",
desc = "heberger une famille.",
descnext = "pop : +5"
},
{
sprite = 37,
tile = 64,
costs = {
food = 40,
wood = 150,
water = 50
},
size = 2,
name = "immeuble",
desc = "heberger de nombreuses ",
descnext = "famille. pop : +50"
},
}

function UIDraw()

print(carte.tiles[cursor.y][cursor.x].sprite, 5,40,0)

rectfill(0,0,127,10, 2)
rect(0,0,127,10, 7)

spr(192, 3, 2, 1, 1)
print(city.ressources.food,12,3,9)

spr(193, 33, 2, 1, 1)
print(city.ressources.wood,42,3,9)

spr(194, 63, 2, 1, 1)
print(city.ressources.water,72,3,9)

spr(195, 93, 2, 1, 1)
print(city.population,102,3,9)

if ( currentState == "build")then
--background
rectfill(0,107,127,127, 15)
rect(0,107,127,127, 7)

local infos = buildBar.tiles[buildBar.position]
spr(infos.sprite,6,109,2,2)
print(infos.name,25,109,1)
print(infos.desc,25,115,13)
print(infos.descnext,25,121,13)

if cursor.z < -2 then
spr(196, 1, 114, 1, 1)
spr(197, 119, 114, 1, 1)
end

end

end

function GameScreenSelectBuildTool()
local infos = buildBar.tiles[buildBar.position]
cursor.size = infos.size
end

function GameScreenBuildSelection()

--si destruction
if buildBar.position == 1 then
if carte.tiles[cursor.y][cursor.x].sprite > 11 then

--si immeuble
if (carte.tiles[cursor.y][cursor.x].sprite == 64) then
carte.tiles[cursor.y][cursor.x-1].sprite = 5
carte.tiles[cursor.y-1][cursor.x].sprite = 5
carte.tiles[cursor.y-1][cursor.x-1].sprite = 5

end
-- si case proche immeuble
if (carte.tiles[cursor.y][cursor.x].sprite == 13) then
local immeublePos = carte.tiles[cursor.y][cursor.x].data
carte.tiles[immeublePos.y][immeublePos.x-1].sprite = 5
carte.tiles[immeublePos.y-1][immeublePos.x].sprite = 5
carte.tiles[immeublePos.y-1][immeublePos.x-1].sprite = 5
carte.tiles[immeublePos.y][immeublePos.x].sprite = 5
end

carte.tiles[cursor.y][cursor.x].sprite = 5
currentState = "move"
cursor.size = 1
end
else
local infos = buildBar.tiles[buildBar.position]
--si immeuble
if infos.size == 2 then
carte.tiles[cursor.y][cursor.x].sprite = 13
carte.tiles[cursor.y][cursor.x].data = {x= cursor.x+1, y =cursor.y+1}
carte.tiles[cursor.y][cursor.x+1].sprite = 13
carte.tiles[cursor.y][cursor.x+1].data = {x= cursor.x+1, y =cursor.y+1}
carte.tiles[cursor.y+1][cursor.x].sprite = 13
carte.tiles[cursor.y+1][cursor.x].data = {x= cursor.x+1, y =cursor.y+1}
carte.tiles[cursor.y+1][cursor.x+1].sprite = infos.tile
currentState = "move"
cursor.size = 1
else
-- si monocase
carte.tiles[cursor.y][cursor.x].sprite = infos.tile
currentState = "move"
cursor.size = 1
end
end
end
-- ./entities/tilemap.lua
function tileMapNew()
tileMapSetSeed(rnd(1000))
tileMapInit()
end

function tileMapInit()
carte.position = { x = 40, y = 40 }
carte.visibility = { x = 35, y = 35}
end

function tileMapSetSeed(seed)
init_perlin(seed)
end

function tileMapUpdate()

end

function tileMapDraw()
for y = carte.position.y,carte.position.y+carte.visibility.y do
for x = carte.position.x,carte.position.x+carte.visibility.x do
local iso = WorldConverterToIso(x,y)
local sprite = carte.tiles[y][x].sprite
local tailleX = 2
local tailleY = 2
local posX = iso.x
local posY = iso.y
if sprite == 64 then
iso = WorldConverterToIso(x-1,y)
posX = iso.x
posY = iso.y - 12
tailleY = 4
tailleX = 4
end
spr(sprite,posX,posY,tailleX,tailleY)
end
end
end


-- ./entities/cursor.lua
function cursorInit()
cursor = { x = 42 , y = 42, z = 0, step = 0.2, size = 1, canConstruct = true }
end

function cursorUpdate()
cursor.canConstruct = true

for x=1,cursor.size do
for y=1,cursor.size do
local onmap = cursorOnMap(cursor.x+(x-1), cursor.y+(y-1))
if onmap == false then
cursor.canConstruct = false
end
end
end

if cursor.z < -4 or cursor.z > 0 then
cursor.step *= -1
end

cursor.z+=cursor.step
end

function cursorOnMap(x,y)

if x < carte.position.x or x > carte.position.x + carte.visibility.x or y < carte.position.y or y > carte.position.y + carte.visibility.y or carte.tiles[y][x].sprite > 7 then
return false
end

return true
end

function cursorDraw()

if cursor.canConstruct == false then
pal(7,8)
end

for x=1,cursor.size do
for y=1,cursor.size do
local iso = WorldConverterToIso(cursor.x+(x-1),cursor.y+(y-1))
spr(1,iso.x,iso.y,2,2)
end
end
pal()

end


function cursorDrawArrow()

for x=1,cursor.size do
for y=1,cursor.size do
local iso = WorldConverterToIso(cursor.x+(x-1),cursor.y+(y-1))
pal(7,0)
spr(16,iso.x+5,iso.y+cursor.z,1,1)
spr(16,iso.x+3,iso.y+cursor.z,1,1)
spr(16,iso.x+4,iso.y+cursor.z-1,1,1)
spr(16,iso.x+4,iso.y+cursor.z+1,1,1)
pal()
spr(16,iso.x+4,iso.y+cursor.z,1,1)
end
end




end


function cursorMoveOf(x,y)
cursor.x = cursor.x+x
cursor.y = cursor.y+y
cameraCenterOn(cursor.x,cursor.y)
end

-- ./entities/camera.lua
cameraOffset = {x = -60, y = -60}
function cameraNew()
cam = {x = -60, y = 16}
end

function cameraMoveOf(x,y)
cam.x = cam.x+x
cam.y = cam.y+y
end

function cameraMove(x, y)
cam.x = x
cam.y = y
end

function cameraToUI()
camera(0,0)
end

function cameraToWorld()
camera(cam.x,cam.y)
end


function cameraCenterOn(x,y)
local iso = WorldConverterToIso(x,y)
iso.x += cameraOffset.x
iso.y += cameraOffset.y

cameraMove(iso.x, iso.y)
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700000000770077000000000000bb000000000000004400000000000000aa00000000000000cc00000000000000110000000000000000000000000000000
00077000000770000007700000000bbbbbb00000000004444440000000000aaaaaa0000000000cccccc000000000011111100000000000000000000000000000
000770000770000000000770000bbbbbbbbbb0000004444444444000000aaaaaaaaaa000000cccccccccc0000001111111111000000000000000000000000000
0007700070000000000000070bbbbbbbbbbbbbb004444444444444400aaaaaaaaaaaaaa00cccccccccccccc00111111111111110000000000000000000000000
777777770770000000000770000bbbbbbbbbb0000004444444444000000aaaaaaaaaa000000cccccccccc0000001111111111000000000000000000000000000
07777770000770000007700000000bbbbbb00000000004444440000000000aaaaaa0000000000cccccc000000000011111100000000000000000000000000000
0077770000000770077000000000000bb000000000000004400000000000000aa00000000000000cc00000000000000110000000000000000000000000000000
00077000000000077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000495500000000000049550000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000010000000000000094559500000000009115950000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000001b1000000000004955494950000011111111495000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000011bb3100000000045594949495000104511111119500000000000000000000000000000000000000000000000000000000000000000000000000
000000000001b1b33101000000454549494955001045411111191500000000000000000000000000000000000000000000000000000000000000000000000000
00000000001bb313331b100000544454945545001054411111111500000000000000000000000000000000000000000000000000000000000000000000000000
00000000001b331311bb310000544459554445000114111111111500000000000000000000000000000000000000000000000000000000000000000000000000
0000000001bb3331b1b3310000574445444475000051111111141100000000000000000000000000000000000000000000000000000000000000000000000000
000000000013331bb313331000574745444445000057411111114100000000000000000000000000000000000000000000000000000000000000000000000000
000000000011111b331331b000544745745445000054411111514110000000000000000000000000000000000000000000000000000000000000000000000000
000000000bbb41bb33311bb00b554445445455b00b55411141145110000000000000000000000000000000000000000000000000000000000000000000000000
00000000000bbb133314b000000555454455b0000005511111111110000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000bb111b000000000055555b000000000055115b00000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000b4000000000000005b000000000000005b0000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000055000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000005555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555555555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000005555555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000555555555555555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005555555555555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005555555555555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005445555555555555555554450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005444455555555555555444450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005444444555555555544444450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005474444445555554444474450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005444744444455444447444450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005444447444454444744444450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005474444474454474444474450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005444744444454444447444450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005444447444454444744444450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005474444474454474444474450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005444744444454444447444450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005444447444454444744444450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005474444474454474444474450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005444744444454444447444450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000b544444744445444474444445b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0bba547444447445447444447445bbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000bb55474444445444444744558b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00008be554744445444474455eb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000b855474454474455bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000ba5544544455ba000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000b8555455be00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000bb55b80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000eb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000444000000000000c000009999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004444400044450000c000009ffff90000700000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000
0044444400499540007c100009ffff90007500000000570000000000000000000000000000000000000000000000000000000000000000000000000000000000
004444440499594007ccc10009ffff90075000000000057000000000000000000000000000000000000000000000000000000000000000000000000000000000
00544440044599507ccccc1000ffff00075000000000057000000000000000000000000000000000000000000000000000000000000000000000000000000000
07754400499495007ccccc100f3333f0007500000000570000000000000000000000000000000000000000000000000000000000000000000000000000000000
770000004994500007ccc100f333333f000700000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000440000000111000f333333f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000099a9900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000099a99900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000099aa99900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000099aa995900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000009999955900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000009c99555900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00009909cc9559000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00990099cc9590000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
009a9900999590900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09aaaa99009909a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9aaaaaaa99009aa90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
099aaaaaaa99aa900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00099aaaaa99a9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000099aa90090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000009900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000










































